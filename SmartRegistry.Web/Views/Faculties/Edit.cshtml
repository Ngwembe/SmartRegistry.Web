@using Microsoft.AspNetCore.Identity
@using SmartRegistry.Web.Models
@model SmartRegistry.Web.Models.Faculty

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = "Edit";
}

<hr />
<div id="wrapper">

    <!-- ============================================================== -->
    <!-- Start right Content here -->
    <!-- ============================================================== -->
    <div class="content-page">
        <!-- Start content -->
        <div class="content">
            <div class="container">




                <h2>Edit</h2>

                <h4>Faculty</h4>

                <div class="row">
                    <div class="col-md-4">
                        <form asp-action="Edit">
                            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                            <input type="hidden" asp-for="FacultyId" />
                            <div class="form-group">
                                <label asp-for="Name" class="control-label"></label>
                                <input asp-for="Name" class="form-control" />
                                <span asp-validation-for="Name" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label asp-for="Code" class="control-label"></label>
                                <input asp-for="Code" class="form-control" />
                                <span asp-validation-for="Code" class="text-danger"></span>
                            </div>

                            <div class="form-group">
                                <label asp-for="Description" class="control-label"></label>
                                <textarea asp-for="Description" class="form-control" rows="5" cols="6"></textarea>
                                <span asp-validation-for="Description" class="text-danger"></span>
                            </div>

                            @if (SignInManager != null && SignInManager.IsSignedIn(this.User))
                            {
                                var user = await SignInManager.UserManager.FindByIdAsync(Model.CreatedBy);

                                <div class="form-group">
                                    <label asp-for="CreatedBy" class="control-label"></label>
                                    <input class="form-control" readonly="readonly" value="@user" />
                                    <span asp-validation-for="CreatedBy" class="text-danger"></span>
                                </div>
                            }


                            <div class="form-group">
                                <label asp-for="CreatedAt" class="control-label"></label>
                                <input asp-for="CreatedAt" class="form-control" text="date"  readonly="readonly" />
                                <span asp-validation-for="CreatedAt" class="text-danger"></span>
                            </div>
                            @*<div class="form-group">
            <label asp-for="LastUpdatedBy" class="control-label"></label>
            <input asp-for="LastUpdatedBy" class="form-control" />
            <span asp-validation-for="LastUpdatedBy" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="LastUpdatedAt" class="control-label"></label>
            <input asp-for="LastUpdatedAt" class="form-control" />
            <span asp-validation-for="LastUpdatedAt" class="text-danger"></span>
        </div>*@
                            <div class="form-group">
                                <div class="checkbox">
                                    <label>
                                        <input asp-for="IsDeleted"  readonly="readonly" /> @Html.DisplayNameFor(model => model.IsDeleted)
                                    </label>
                                </div>
                            </div>
                            @if (Model.IsDeleted)
                            {
                                <div class="form-group">
                                    <label asp-for="DeletedBy" class="control-label"></label>
                                    <input asp-for="DeletedBy" class="form-control" />
                                    <span asp-validation-for="DeletedBy" class="text-danger"></span>
                                </div>
                                <div class="form-group">
                                    <label asp-for="DeletedAt" class="control-label"></label>
                                    <input asp-for="DeletedAt" class="form-control" />
                                    <span asp-validation-for="DeletedAt" class="text-danger"></span>
                                </div>
                            }
                            <div class="form-group">
                                <input type="submit" value="Save" class="btn btn-default" />
                            </div>
                        </form>
                    </div>
                </div>
                
                <div>
                    <a asp-action="Index">Back to List</a>
                </div>

            </div> <!-- container -->

        </div> <!-- content -->

        <footer class="footer text-right">
            @{
                <i>@string.Format("{0} © SmartRegistry", DateTime.Now.Year)</i>
            }

        </footer>

    </div>

</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
